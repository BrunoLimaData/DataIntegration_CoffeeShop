CREATE OR REPLACE DATABASE DATA_INTEGRATION;

CREATE OR REPLACE SCHEMA DW;


--CRIAÇÃO DAS TABELAS
CREATE OR REPLACE TABLE DATA_INTEGRATION.DW.DIM_PRODUCT( 
SK_PRODUCT_ID INT IDENTITY(1,1),
PRODUCT_CODE INT,
PRODUCT_TYPE VARCHAR,
PRODUCT_CATEGORY VARCHAR,
PRODUCT_DETAIL VARCHAR,
PRODUCT_SIZE VARCHAR
);

CREATE OR REPLACE TABLE DATA_INTEGRATION.DW.DIM_STORE( 
SK_STORE_ID INT IDENTITY(1,1),
STORE_CODE INT,
STORE_LOCATION VARCHAR
);


CREATE OR REPLACE TABLE DATA_INTEGRATION.DW.FACT_TRANSACTION(
TRANSACTION_ID INT,
TRANSACTION_DATE DATE,
TRANSACTION_TIME TIME,
TRANSACTION_QTY INT,
UNIT_PRICE FLOAT,
TOTAL_BILL FLOAT,
SK_PRODUCT_ID INT,
SK_DATE INT,
SK_STORE_ID INT
);

CREATE OR REPLACE TABLE DATA_INTEGRATION.DW.DIM_DATE (
    SK_DATE         INTEGER,
    full_date       DATE,   
    year            INTEGER,
    quarter         INTEGER,
    month           INTEGER,
    month_name      STRING, 
    day_number      INTEGER,
    day_of_week     INTEGER,
    day_name        STRING,
    week_of_year    INTEGER,
    is_weekend      BOOLEAN
);


--CRIAÇÃO PROCEDURE DE CARGA
CREATE OR REPLACE PROCEDURE DATA_INTEGRATION.DW.MODELO()
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS $$


BEGIN

TRUNCATE TABLE DATA_INTEGRATION.DW.DIM_PRODUCT;

INSERT INTO DATA_INTEGRATION.DW.DIM_PRODUCT(PRODUCT_CODE,PRODUCT_TYPE,PRODUCT_CATEGORY,PRODUCT_DETAIL,PRODUCT_SIZE)
SELECT DISTINCT PRODUCT_ID AS PRODUCT_CODE,PRODUCT_TYPE,PRODUCT_CATEGORY,PRODUCT_DETAIL,"Size" AS PRODUCT_SIZE FROM DATA_INTEGRATION.DW.LANDING_COFFEE_SHOP; 


TRUNCATE TABLE DATA_INTEGRATION.DW.DIM_STORE;

INSERT INTO DATA_INTEGRATION.DW.DIM_STORE(STORE_CODE,STORE_LOCATION)
SELECT DISTINCT STORE_ID AS STORE_CODE,STORE_LOCATION, FROM DATA_INTEGRATION.DW.LANDING_COFFEE_SHOP; 


TRUNCATE TABLE DATA_INTEGRATION.DW.DIM_DATE;

INSERT INTO DATA_INTEGRATION.DW.DIM_DATE
SELECT
    TO_NUMBER(TO_CHAR(DATEADD(DAY, SEQ4(), DATE '2020-01-01'), 'YYYYMMDD')) AS id_date,
    DATEADD(DAY, SEQ4(), DATE '2020-01-01') AS full_date,
    EXTRACT(YEAR FROM DATEADD(DAY, SEQ4(), DATE '2020-01-01')) AS year,
    EXTRACT(QUARTER FROM DATEADD(DAY, SEQ4(), DATE '2020-01-01')) AS quarter,
    EXTRACT(MONTH FROM DATEADD(DAY, SEQ4(), DATE '2020-01-01')) AS month,
    TRIM(TO_CHAR(DATEADD(DAY, SEQ4(), DATE '2020-01-01'), 'Month')) AS month_name,
    EXTRACT(DAY FROM DATEADD(DAY, SEQ4(), DATE '2020-01-01')) AS day_number,
    EXTRACT(DAYOFWEEK FROM DATEADD(DAY, SEQ4(), DATE '2020-01-01')) - 1 AS day_of_week,
    TRIM(TO_CHAR(DATEADD(DAY, SEQ4(), DATE '2020-01-01'), 'Day')) AS day_name,
    EXTRACT(WEEK FROM DATEADD(DAY, SEQ4(), DATE '2020-01-01')) AS week_of_year,
    CASE 
        WHEN EXTRACT(DAYOFWEEK FROM DATEADD(DAY, SEQ4(), DATE '2020-01-01')) IN (1, 7)
        THEN TRUE 
        ELSE FALSE 
    END AS is_weekend
FROM TABLE(GENERATOR(ROWCOUNT => 2192));



TRUNCATE TABLE DATA_INTEGRATION.DW.FACT_TRANSACTION;


INSERT INTO DATA_INTEGRATION.DW.FACT_TRANSACTION(TRANSACTION_ID,TRANSACTION_DATE,TRANSACTION_TIME,TRANSACTION_QTY,UNIT_PRICE,TOTAL_BILL,SK_PRODUCT_ID,SK_DATE,SK_STORE_ID)
SELECT DISTINCT 
A.TRANSACTION_ID,
TO_DATE(A.TRANSACTION_DATE, 'DD/MM/YYYY') AS TRANSACTION_DATE,
A.TRANSACTION_TIME::TIME AS TRANSACTION_TIME,
A.TRANSACTION_QTY,
A.UNIT_PRICE,
"Total_bill",
B.SK_PRODUCT_ID,
C.SK_DATE,
D.SK_STORE_ID
FROM DATA_INTEGRATION.DW.LANDING_COFFEE_SHOP A
LEFT JOIN DATA_INTEGRATION.DW.DIM_PRODUCT B ON A.PRODUCT_ID = B.PRODUCT_CODE
LEFT JOIN DATA_INTEGRATION.DW.DIM_DATE C ON TO_NUMBER(TO_CHAR(TO_DATE(A.TRANSACTION_DATE, 'DD/MM/YYYY'), 'YYYYMMDD'))  = C.SK_DATE
LEFT JOIN DATA_INTEGRATION.DW.DIM_STORE D ON A.STORE_ID = D.STORE_CODE 
; 


RETURN 'SUCESSO';
END
$$;


--TASK PARA CARGA NO SNOWFLAKE
create or replace task DATA_INTEGRATION.DW.TASK_CARGA_DW
	warehouse=COMPUTE_WH
	schedule='USING CRON 0 6 * * * America/Sao_Paulo'
	as CALL DATA_INTEGRATION.DW.MODELO();   

ALTER TASK DATA_INTEGRATION.DW.TASK_CARGA_DW RESUME;    


--VIEWS COM A RESPOSTA DE CADA PERGUNTA
SELECT * FROM DATA_INTEGRATION.DW.PRODUTO_MAIS_VENDIDO_MES
SELECT * FROM DATA_INTEGRATION.DW.LOJA_COM_MAIS_VENDAS_MES
SELECT * FROM DATA_INTEGRATION.DW.TAMANHO_PRODUTO_MAIS_COMPRADO_MES
SELECT * FROM DATA_INTEGRATION.DW.VOLUME_VENDAS_POR_HORARIO
SELECT * FROM DATA_INTEGRATION.DW.TOTAL_VENDAS_POR_MES
